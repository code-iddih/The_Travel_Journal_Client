{"ast":null,"code":"import api from \"./api\";\n\n// Login function\nexport const login = async credentials => {\n  const response = await api.post(\"/users/login\", {\n    username: credentials.username,\n    password: credentials.password\n  });\n  const {\n    access_token\n  } = response.data;\n  localStorage.setItem(\"token\", access_token);\n  return response.data;\n};\n\n// Register function\nexport const register = async userData => {\n  const response = await api.post(\"h/users/register\", {\n    username: userData.username,\n    email: userData.email,\n    password_hash: userData.password\n  });\n  return response.data;\n};\n\n// Logout function\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\n// Password reset function\nexport const resetPassword = async email => {\n  const response = await api.post(\"https://db-postgresql.onrender.com/api/users/reset-password\", {\n    email\n  });\n  return response.data;\n};\n\n// Checking authentication status function\nexport const checkAuthStatus = async () => {\n  try {\n    await api.get(\"https://db-postgresql.onrender.com/api/users/profile\");\n    return true;\n  } catch (error) {\n    return false;\n  }\n};","map":{"version":3,"names":["api","login","credentials","response","post","username","password","access_token","data","localStorage","setItem","register","userData","email","password_hash","logout","removeItem","resetPassword","checkAuthStatus","get","error"],"sources":["/home/code-iddih/Documents/projects/The Travel Journal/client/src/utils/auth.js"],"sourcesContent":["import api from \"./api\";\n\n// Login function\nexport const login = async (credentials) => {\n  const response = await api.post(\"/users/login\", {\n    username: credentials.username, \n    password: credentials.password, \n  });\n  const { access_token } = response.data;\n  localStorage.setItem(\"token\", access_token);\n  return response.data;\n};\n\n// Register function\nexport const register = async (userData) => {\n  const response = await api.post(\"h/users/register\", {\n    username: userData.username,\n    email: userData.email,\n    password_hash: userData.password, \n  });\n  return response.data;\n};\n\n// Logout function\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\n// Password reset function\nexport const resetPassword = async (email) => {\n  const response = await api.post(\"https://db-postgresql.onrender.com/api/users/reset-password\", { email });\n  return response.data;\n};\n\n// Checking authentication status function\nexport const checkAuthStatus = async () => {\n  try {\n    await api.get(\"https://db-postgresql.onrender.com/api/users/profile\");\n    return true;\n  } catch (error) {\n    return false;\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAE;IAC9CC,QAAQ,EAAEH,WAAW,CAACG,QAAQ;IAC9BC,QAAQ,EAAEJ,WAAW,CAACI;EACxB,CAAC,CAAC;EACF,MAAM;IAAEC;EAAa,CAAC,GAAGJ,QAAQ,CAACK,IAAI;EACtCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,YAAY,CAAC;EAC3C,OAAOJ,QAAQ,CAACK,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,kBAAkB,EAAE;IAClDC,QAAQ,EAAEO,QAAQ,CAACP,QAAQ;IAC3BQ,KAAK,EAAED,QAAQ,CAACC,KAAK;IACrBC,aAAa,EAAEF,QAAQ,CAACN;EAC1B,CAAC,CAAC;EACF,OAAOH,QAAQ,CAACK,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMO,MAAM,GAAGA,CAAA,KAAM;EAC1BN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOJ,KAAK,IAAK;EAC5C,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,6DAA6D,EAAE;IAAES;EAAM,CAAC,CAAC;EACzG,OAAOV,QAAQ,CAACK,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMlB,GAAG,CAACmB,GAAG,CAAC,sDAAsD,CAAC;IACrE,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}