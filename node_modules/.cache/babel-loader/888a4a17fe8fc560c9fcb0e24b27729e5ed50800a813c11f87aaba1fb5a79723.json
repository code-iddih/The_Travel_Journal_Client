{"ast":null,"code":"import React from\"react\";import{Formik,Form,Field,ErrorMessage}from\"formik\";import*as Yup from\"yup\";import{resetPassword}from\"../utils/auth\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPasswordSchema=Yup.object().shape({email:Yup.string().email(\"Invalid email\").required(\"Email is required\")});function ResetPasswordPage(){const handleSubmit=async(values,_ref)=>{let{setSubmitting,setStatus}=_ref;try{await resetPassword(values.email);setStatus({success:\"Password reset email sent. Please check your inbox.\"});}catch(error){setStatus({error:\"Failed to send reset email. Please try again.\"});}finally{setSubmitting(false);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Reset Password\"}),/*#__PURE__*/_jsx(Formik,{initialValues:{email:\"\"},validationSchema:ResetPasswordSchema,onSubmit:handleSubmit,children:_ref2=>{let{isSubmitting,status}=_ref2;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"form-label\",children:\"Email\"}),/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\",className:\"form-control\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",component:\"div\",className:\"text-danger\"})]}),status&&status.success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",children:status.success}),status&&status.error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:status.error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isSubmitting,children:isSubmitting?\"Sending...\":\"Reset Password\"})]});}})]});}export default ResetPasswordPage;","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","resetPassword","jsx","_jsx","jsxs","_jsxs","ResetPasswordSchema","object","shape","email","string","required","ResetPasswordPage","handleSubmit","values","_ref","setSubmitting","setStatus","success","error","children","initialValues","validationSchema","onSubmit","_ref2","isSubmitting","status","className","htmlFor","type","name","component","disabled"],"sources":["/home/code-iddih/Music/client/src/pages/ResetPasswordPage.js"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { resetPassword } from \"../utils/auth\";\n\nconst ResetPasswordSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n});\n\nfunction ResetPasswordPage() {\n  const handleSubmit = async (values, { setSubmitting, setStatus }) => {\n    try {\n      await resetPassword(values.email);\n      setStatus({\n        success: \"Password reset email sent. Please check your inbox.\",\n      });\n    } catch (error) {\n      setStatus({ error: \"Failed to send reset email. Please try again.\" });\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reset Password</h1>\n      <Formik\n        initialValues={{ email: \"\" }}\n        validationSchema={ResetPasswordSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, status }) => (\n          <Form>\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email\n              </label>\n              <Field type=\"email\" name=\"email\" className=\"form-control\" />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"text-danger\"\n              />\n            </div>\n\n            {status && status.success && (\n              <div className=\"alert alert-success\">{status.success}</div>\n            )}\n            {status && status.error && (\n              <div className=\"alert alert-danger\">{status.error}</div>\n            )}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Sending...\" : \"Reset Password\"}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default ResetPasswordPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,YAAY,KAAQ,QAAQ,CAC1D,MAAO,GAAK,CAAAC,GAAG,KAAM,KAAK,CAC1B,OAASC,aAAa,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,mBAAmB,CAAGN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAC7CC,KAAK,CAAET,GAAG,CAACU,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,eAAe,CAAC,CAACE,QAAQ,CAAC,mBAAmB,CACzE,CAAC,CAAC,CAEF,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3B,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAOC,MAAM,CAAAC,IAAA,GAAmC,IAAjC,CAAEC,aAAa,CAAEC,SAAU,CAAC,CAAAF,IAAA,CAC9D,GAAI,CACF,KAAM,CAAAd,aAAa,CAACa,MAAM,CAACL,KAAK,CAAC,CACjCQ,SAAS,CAAC,CACRC,OAAO,CAAE,qDACX,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdF,SAAS,CAAC,CAAEE,KAAK,CAAE,+CAAgD,CAAC,CAAC,CACvE,CAAC,OAAS,CACRH,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAED,mBACEX,KAAA,QAAAe,QAAA,eACEjB,IAAA,OAAAiB,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBjB,IAAA,CAACP,MAAM,EACLyB,aAAa,CAAE,CAAEZ,KAAK,CAAE,EAAG,CAAE,CAC7Ba,gBAAgB,CAAEhB,mBAAoB,CACtCiB,QAAQ,CAAEV,YAAa,CAAAO,QAAA,CAEtBI,KAAA,MAAC,CAAEC,YAAY,CAAEC,MAAO,CAAC,CAAAF,KAAA,oBACxBnB,KAAA,CAACR,IAAI,EAAAuB,QAAA,eACHf,KAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAP,QAAA,eACnBjB,IAAA,UAAOyB,OAAO,CAAC,OAAO,CAACD,SAAS,CAAC,YAAY,CAAAP,QAAA,CAAC,OAE9C,CAAO,CAAC,cACRjB,IAAA,CAACL,KAAK,EAAC+B,IAAI,CAAC,OAAO,CAACC,IAAI,CAAC,OAAO,CAACH,SAAS,CAAC,cAAc,CAAE,CAAC,cAC5DxB,IAAA,CAACJ,YAAY,EACX+B,IAAI,CAAC,OAAO,CACZC,SAAS,CAAC,KAAK,CACfJ,SAAS,CAAC,aAAa,CACxB,CAAC,EACC,CAAC,CAELD,MAAM,EAAIA,MAAM,CAACR,OAAO,eACvBf,IAAA,QAAKwB,SAAS,CAAC,qBAAqB,CAAAP,QAAA,CAAEM,MAAM,CAACR,OAAO,CAAM,CAC3D,CACAQ,MAAM,EAAIA,MAAM,CAACP,KAAK,eACrBhB,IAAA,QAAKwB,SAAS,CAAC,oBAAoB,CAAAP,QAAA,CAAEM,MAAM,CAACP,KAAK,CAAM,CACxD,cAEDhB,IAAA,WACE0B,IAAI,CAAC,QAAQ,CACbF,SAAS,CAAC,iBAAiB,CAC3BK,QAAQ,CAAEP,YAAa,CAAAL,QAAA,CAEtBK,YAAY,CAAG,YAAY,CAAG,gBAAgB,CACzC,CAAC,EACL,CAAC,EACR,CACK,CAAC,EACN,CAAC,CAEV,CAEA,cAAe,CAAAb,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}